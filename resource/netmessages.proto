package game;

message PacketBase {
	enum Type {
		ClientLoginPacket = 0;
		USERCMD = 1;
		GAMEST = 2;
	}
	
	required Type type = 1;
	
	// extensions 2 to max;
	optional ClientLoginPacket clientLoginPacket = 2;
	optional usercmd usercmd = 3;
	optional gamest gamest = 4;
}

message vec3 {
	required float x = 1;
	required float y = 2;
	required float z = 3;
}

message ClientLoginPacket {
	required string test = 1;
}

// add viewangles
// use button bit field instead of bools
message usercmd {
	required int32 seqno = 1;
	required vec3 viewangles = 2;
	required bool w = 3;
	required bool a = 4;
	required bool s = 5;
	required bool d = 6;
	required bool space = 7;
}

message Msg_Disconnect {
	optional string text = 1;
}

// entity_state is the information conveyed from the server in an update message
message entity_state {
	required int32 id = 1;
	required vec3 origin = 2;
}

// packet_entities
message gamest {
	required int32 seqno = 1;

	repeated entity_state entity = 2;
}